{"ast":null,"code":"\"use strict\";\n/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || Object.assign || function (t) {\n  for (var s, i = 1, n = arguments.length; i < n; i++) {\n    s = arguments[i];\n\n    for (var p in s) {\n      if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n  }\n\n  return t;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = require(\"react\");\n\nvar react_1 = require(\"react\");\n\nvar core_1 = require(\"@aws-amplify/core\");\n\nvar auth_1 = require(\"@aws-amplify/auth\");\n\nvar Amplify_UI_Theme_1 = require(\"../Amplify-UI/Amplify-UI-Theme\");\n\nvar Amplify_UI_Components_React_1 = require(\"../Amplify-UI/Amplify-UI-Components-React\");\n\nvar TOTPSetupComp_1 = require(\"./TOTPSetupComp\");\n\nvar logger = new core_1.ConsoleLogger('SelectMFAType');\n\nvar SelectMFAType =\n/** @class */\nfunction (_super) {\n  __extends(SelectMFAType, _super);\n\n  function SelectMFAType(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.verify = _this.verify.bind(_this);\n    _this.handleInputChange = _this.handleInputChange.bind(_this);\n    _this.state = {\n      TOTPSetup: false,\n      selectMessage: null\n    };\n    return _this;\n  }\n\n  SelectMFAType.prototype.handleInputChange = function (evt) {\n    // clear current state\n    this.setState({\n      TOTPSetup: false,\n      selectMessage: null\n    });\n    this.inputs = {};\n    var _a = evt.target,\n        name = _a.name,\n        value = _a.value,\n        type = _a.type,\n        checked = _a.checked;\n    var check_type = ['radio', 'checkbox'].includes(type);\n    this.inputs[value] = check_type ? checked : value;\n  };\n\n  SelectMFAType.prototype.verify = function () {\n    var _this = this;\n\n    logger.debug('mfatypes inputs', this.inputs);\n\n    if (!this.inputs) {\n      logger.debug('No mfa type selected');\n      return;\n    }\n\n    var _a = this.inputs,\n        TOTP = _a.TOTP,\n        SMS = _a.SMS,\n        NOMFA = _a.NOMFA;\n    var mfaMethod = null;\n\n    if (TOTP) {\n      mfaMethod = 'TOTP';\n    } else if (SMS) {\n      mfaMethod = 'SMS';\n    } else if (NOMFA) {\n      mfaMethod = 'NOMFA';\n    }\n\n    var user = this.props.authData;\n\n    if (!auth_1.default || typeof auth_1.default.setPreferredMFA !== 'function') {\n      throw new Error('No Auth module found, please ensure @aws-amplify/auth is imported');\n    }\n\n    auth_1.default.setPreferredMFA(user, mfaMethod).then(function (data) {\n      logger.debug('set preferred mfa success', data);\n\n      _this.setState({\n        selectMessage: 'Success! Your MFA Type is now: ' + mfaMethod,\n        showToast: true\n      });\n    }).catch(function (err) {\n      var message = err.message;\n\n      if (message === 'User has not set up software token mfa' || message === 'User has not verified software token mfa') {\n        _this.setState({\n          TOTPSetup: true,\n          selectMessage: 'You need to setup TOTP',\n          showToast: true\n        });\n      } else {\n        logger.debug('set preferred mfa failed', err);\n\n        _this.setState({\n          selectMessage: 'Failed! You cannot select MFA Type for now!',\n          showToast: true\n        });\n      }\n    });\n  };\n\n  SelectMFAType.prototype.selectView = function (theme) {\n    var _this = this;\n\n    var MFATypes = this.props.MFATypes;\n\n    if (!MFATypes || Object.keys(MFATypes).length < 2) {\n      logger.debug('less than 2 mfa types available');\n      return React.createElement(\"div\", null, React.createElement(\"a\", null, \"less than 2 mfa types available\"));\n    }\n\n    var SMS = MFATypes.SMS,\n        TOTP = MFATypes.TOTP,\n        Optional = MFATypes.Optional;\n    return React.createElement(Amplify_UI_Components_React_1.FormSection, {\n      theme: theme\n    }, this.state.showToast && this.state.selectMessage && React.createElement(Amplify_UI_Components_React_1.Toast, {\n      theme: theme,\n      onClose: function onClose() {\n        return _this.setState({\n          showToast: false\n        });\n      }\n    }, core_1.I18n.get(this.state.selectMessage)), React.createElement(Amplify_UI_Components_React_1.SectionHeader, {\n      theme: theme\n    }, core_1.I18n.get('Select MFA Type')), React.createElement(Amplify_UI_Components_React_1.SectionBody, {\n      theme: theme\n    }, React.createElement(\"div\", null, SMS ? React.createElement(Amplify_UI_Components_React_1.RadioRow, {\n      placeholder: core_1.I18n.get('SMS'),\n      theme: theme,\n      key: \"sms\",\n      name: \"MFAType\",\n      value: \"SMS\",\n      onChange: this.handleInputChange\n    }) : null, TOTP ? React.createElement(Amplify_UI_Components_React_1.RadioRow, {\n      placeholder: core_1.I18n.get('TOTP'),\n      theme: theme,\n      key: \"totp\",\n      name: \"MFAType\",\n      value: \"TOTP\",\n      onChange: this.handleInputChange\n    }) : null, Optional ? React.createElement(Amplify_UI_Components_React_1.RadioRow, {\n      placeholder: core_1.I18n.get('No MFA'),\n      theme: theme,\n      key: \"noMFA\",\n      name: \"MFAType\",\n      value: \"NOMFA\",\n      onChange: this.handleInputChange\n    }) : null)), React.createElement(Amplify_UI_Components_React_1.SectionFooter, {\n      theme: theme\n    }, React.createElement(Amplify_UI_Components_React_1.Button, {\n      theme: theme,\n      onClick: this.verify\n    }, core_1.I18n.get('Verify'))));\n  };\n\n  SelectMFAType.prototype.render = function () {\n    var theme = this.props.theme ? theme : Amplify_UI_Theme_1.default;\n    return React.createElement(\"div\", null, this.selectView(theme), this.state.TOTPSetup ? React.createElement(TOTPSetupComp_1.default, __assign({}, this.props)) : null);\n  };\n\n  return SelectMFAType;\n}(react_1.Component);\n\nexports.default = SelectMFAType;","map":null,"metadata":{},"sourceType":"script"}