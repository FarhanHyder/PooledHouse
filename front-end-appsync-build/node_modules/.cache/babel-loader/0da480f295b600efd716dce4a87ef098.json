{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _invariant = _interopRequireDefault(require(\"invariant\"));\n\nvar _uncontrollable = _interopRequireDefault(require(\"uncontrollable\"));\n\nvar _createChainedFunction = _interopRequireDefault(require(\"./utils/createChainedFunction\"));\n\nvar _ElementChildren = require(\"./utils/ElementChildren\");\n\nvar _ButtonGroup = _interopRequireDefault(require(\"./ButtonGroup\"));\n\nvar _ToggleButton = _interopRequireDefault(require(\"./ToggleButton\"));\n\nvar defaultProps = {\n  type: 'radio'\n};\n\nvar ToggleButtonGroup =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inheritsLoose2.default)(ToggleButtonGroup, _React$Component);\n\n  function ToggleButtonGroup() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = ToggleButtonGroup.prototype;\n\n  _proto.getValues = function getValues() {\n    var value = this.props.value;\n    return value == null ? [] : [].concat(value);\n  };\n\n  _proto.handleToggle = function handleToggle(value, event) {\n    var _this$props = this.props,\n        type = _this$props.type,\n        onChange = _this$props.onChange;\n    var values = this.getValues();\n    var isActive = values.indexOf(value) !== -1;\n\n    if (type === 'radio') {\n      if (!isActive) onChange(value, event);\n      return;\n    }\n\n    if (isActive) {\n      onChange(values.filter(function (n) {\n        return n !== value;\n      }), event);\n    } else {\n      onChange([].concat(values, [value]), event);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this = this;\n\n    var _this$props2 = this.props,\n        children = _this$props2.children,\n        type = _this$props2.type,\n        name = _this$props2.name,\n        props = (0, _objectWithoutPropertiesLoose2.default)(_this$props2, [\"children\", \"type\", \"name\"]);\n    delete props.onChange;\n    delete props.value;\n    var values = this.getValues();\n    !(type !== 'radio' || !!name) ? process.env.NODE_ENV !== \"production\" ? (0, _invariant.default)(false, 'A `name` is required to group the toggle buttons when the `type` ' + 'is set to \"radio\"') : invariant(false) : void 0;\n    return _react.default.createElement(_ButtonGroup.default, (0, _extends2.default)({}, props, {\n      toggle: true\n    }), (0, _ElementChildren.map)(children, function (child) {\n      var _child$props = child.props,\n          value = _child$props.value,\n          onChange = _child$props.onChange;\n\n      var handler = function handler(e) {\n        return _this.handleToggle(value, e);\n      };\n\n      return _react.default.cloneElement(child, {\n        type: type,\n        name: child.name || name,\n        checked: values.indexOf(value) !== -1,\n        onChange: (0, _createChainedFunction.default)(onChange, handler)\n      });\n    }));\n  };\n\n  return ToggleButtonGroup;\n}(_react.default.Component);\n\nToggleButtonGroup.defaultProps = defaultProps;\nvar UncontrolledToggleButtonGroup = (0, _uncontrollable.default)(ToggleButtonGroup, {\n  value: 'onChange'\n});\nUncontrolledToggleButtonGroup.Button = _ToggleButton.default;\nvar _default = UncontrolledToggleButtonGroup;\nexports.default = _default;\nmodule.exports = exports[\"default\"];","map":null,"metadata":{},"sourceType":"script"}