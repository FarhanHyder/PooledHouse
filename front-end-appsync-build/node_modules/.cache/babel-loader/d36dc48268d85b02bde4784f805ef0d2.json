{"ast":null,"code":"\"use strict\";\n/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = require(\"react\");\n\nvar react_1 = require(\"react\");\n\nvar core_1 = require(\"@aws-amplify/core\");\n\nvar AmplifyTheme_1 = require(\"../AmplifyTheme\");\n\nvar Picker_1 = require(\"./Picker\");\n\nvar Container = {};\nvar PickerPreview = {\n  maxWidth: '100%'\n};\nvar logger = new core_1.ConsoleLogger('TextPicker');\n\nvar TextPicker =\n/** @class */\nfunction (_super) {\n  __extends(TextPicker, _super);\n\n  function TextPicker(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.handlePick = _this.handlePick.bind(_this);\n    _this.state = {\n      previewText: props.previewText\n    };\n    return _this;\n  }\n\n  TextPicker.prototype.handlePick = function (data) {\n    var that = this;\n    var file = data.file,\n        name = data.name,\n        size = data.size,\n        type = data.type;\n    var _a = this.props,\n        preview = _a.preview,\n        onPick = _a.onPick,\n        onLoad = _a.onLoad;\n\n    if (onPick) {\n      onPick(data);\n    }\n\n    if (preview) {\n      var reader = new FileReader();\n\n      reader.onload = function (e) {\n        var text = e.target.result;\n        that.setState({\n          previewText: text\n        });\n\n        if (onLoad) {\n          onLoad(text);\n        }\n      };\n\n      reader.readAsText(file);\n    }\n  };\n\n  TextPicker.prototype.render = function () {\n    var preview = this.props.preview;\n    var previewText = this.state.previewText;\n    var title = this.props.title || 'Pick a File';\n    var theme = this.props.theme || AmplifyTheme_1.default;\n    var containerStyle = Object.assign({}, Container, theme.picker);\n    var previewStyle = Object.assign({}, PickerPreview, theme.pickerPreview, theme.halfHeight, preview && preview !== 'hidden' ? {} : AmplifyTheme_1.default.hidden);\n    return React.createElement(\"div\", {\n      style: containerStyle\n    }, previewText ? React.createElement(\"div\", {\n      style: previewStyle\n    }, React.createElement(\"pre\", {\n      style: theme.pre\n    }, previewText)) : null, React.createElement(Picker_1.default, {\n      title: title,\n      accept: \"text/*\",\n      theme: theme,\n      onPick: this.handlePick\n    }));\n  };\n\n  return TextPicker;\n}(react_1.Component);\n\nexports.default = TextPicker;","map":null,"metadata":{},"sourceType":"script"}