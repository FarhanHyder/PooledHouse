{"version":3,"sources":["SignUp/SignUp.js","TipInfo/TipInfo.js","aws-exports.js","App.js","serviceWorker.js","index.js"],"names":["SighUp","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","submit","bind","assertThisInitialized","e","alert","input","value","preventDefault","_this2","react_default","a","createElement","Navbar_default","className","ButtonToolbar_default","Button_default","href","variant","onClick","handler","onSubmit","type","name","placeholder","required","ref","Component","TipInfo","Container","fluid","Form","Row","Col","Group","controlId","Label","Control","Check","inline","label","id","as","Button","React","awsmobile","aws_project_region","aws_content_delivery_bucket","aws_content_delivery_bucket_region","aws_content_delivery_url","aws_cognito_identity_pool_id","aws_cognito_region","aws_user_pools_id","aws_user_pools_web_client_id","oauth","Amplify","configure","App","handleSignUp","setState","showHome","state","showSignUp","handleTipUpdate","showTipUpdate","home","Form_default","FormControl_default","ToggleButtonGroup_default","defaultValue","ToggleButton_default","SignUp_SignUp","src_TipInfo_TipInfo","withAuthenticator","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.edda2cd6.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './SignUp.css';\nimport '../App.css';\nimport Navbar from 'react-bootstrap/Navbar'\nimport Form from 'react-bootstrap/Form'\nimport FormControl from 'react-bootstrap/FormControl'\nimport Button from 'react-bootstrap/Button'\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar'\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup'\nimport ToggleButton from 'react-bootstrap/ToggleButton'\n\n\nclass SighUp extends Component {\n  constructor(props) {\n    super(props);\n\n    this.submit = this.submit.bind(this);\n  }\n\n  submit(e) {\n    alert('Account for ' + this.input.value + \" is created\");\n    e.preventDefault();\n  }\n\n  render() {\n    return (\n    <div>\n      <Navbar className=\"bg-olive justify-content-between\">\n        <h3 className=\"text-color-white\">Pooled House</h3>\n        <ButtonToolbar>\n          <Button href=\"#\" variant=\"link\" className=\"text-color-white\" onClick={this.props.handler}>Home</Button>\n        </ButtonToolbar>\n      </Navbar>\n\n      <form className='container' onSubmit={this.submit}>\n        <label>First Name:\n          <input type='text' name='FirstName' placeholder='First Name' required/>\n        </label>\n        <label>Last Name: \n          <input type='text' name='LastName' placeholder='Last Name' required/>\n        </label>\n        <label>Phone Number: \n          <input type='tel' name='Telephone' placeholder='Phone Number' required/>\n        </label>\n        <label>Username:\n          <input type=\"text\" ref={(input) => this.input = input} />\n        </label>\n        <label>Password: \n          <input type='password' name='Password' placeholder='Password' required/>\n        </label>\n        <label>Confirm Password: \n          <input type='password' name='ConfirmPassword' placeholder='Confirm Password' required/>\n        </label>\n        <input type=\"submit\" value=\"Submit\" className='button'/>\n      </form>\n    </div>);\n  }\n}\n\nexport default SighUp;\n","import React from 'react';\nimport {Col, Row, Container} from 'react-bootstrap';\nimport {Form, Button, ButtonToolbar, Navbar} from 'react-bootstrap';\n\nclass TipInfo extends React.Component {\n    constructor(props) {\n        super(props);\n        //this.submit = this.submit.bind(this);\n    }\n\n    render () {\n        return (\n            <div>\n        <Container fluid='true'>\n            <Form className=\"text-left newTips\"> {/*onSubmit={()=>{console.log(props.name)}*/}\n                <Row>\n                    <Col>\n                        <Form.Group controlId=\"shiftDate\">\n                                <Form.Label>Shift Date</Form.Label>\n                                <Form.Control\n                                    type='date'\n                                />\n                            </Form.Group> \n                    </Col>\n                    <Col>\n                        <Form.Group controlId=\"shiftAP\">\n                            <Form.Label>Shift Time</Form.Label>\n                            { /*this div just helps with formatting */}\n                            <div>\n                                <Form.Check inline label='AM' type='radio' name='rad' id='radio-AM' />\n                                <Form.Check inline label='PM' type='radio' name='rad' id='radio-PM' />\n                            </div>\n                        </Form.Group>\n                    </Col>\n                    <Col>\n                        <Form.Group>\n                            <Form.Label>Shift Length (hours)</Form.Label>\n                            <Form.Control\n                                type='number'\n                            />\n                        </Form.Group>\n                    </Col>\n                    <Col>\n                        <Form.Group>\n                                <Form.Label>Position</Form.Label>\n                                <Form.Control as='select'>\n                                    <option>Bartender</option>\n                                    <option>Server</option>\n                                    <option>Barback</option>\n                                    <option>Busser</option>\n                                    <option>Other</option>\n                                </Form.Control>\n                        </Form.Group>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <Form.Group>\n                            <Form.Label>Tip Takehome</Form.Label>\n                            <Form.Control\n                                type='number'\n                            />\n                        </Form.Group>\n                    </Col>\n                    <Col>\n                        <Form.Group>\n                            <Form.Label>Shift Location</Form.Label>\n                            <Form.Control\n                                type='text'\n                                placeholder='i.e. 123 E 29th St, New York, New York, 99999'\n                            />\n                            <Button variant=\"primary\" type = \"submit\">Submit</Button>\n                        </Form.Group>\n                    </Col>\n                </Row>\n            </Form>\n        </Container>\n        </div>\n        );\n    }\n}\n\nexport default TipInfo;\n","// WARNING: DO NOT EDIT. This file is automatically generated by AWS Amplify. It will be overwritten.\n\nconst awsmobile = {\n    \"aws_project_region\": \"us-east-1\",\n    \"aws_content_delivery_bucket\": \"front-end-20190411125054-hostingbucket-phdev\",\n    \"aws_content_delivery_bucket_region\": \"us-east-1\",\n    \"aws_content_delivery_url\": \"http://front-end-20190411125054-hostingbucket-phdev.s3-website-us-east-1.amazonaws.com\",\n    \"aws_cognito_identity_pool_id\": \"us-east-1:c87a8d78-1ce2-42b7-8cd6-ef3e2c15495e\",\n    \"aws_cognito_region\": \"us-east-1\",\n    \"aws_user_pools_id\": \"us-east-1_dEdKYWuRL\",\n    \"aws_user_pools_web_client_id\": \"1qvola46uieqbouj5qp72dsn65\",\n    \"oauth\": {}\n};\n\n\nexport default awsmobile;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Login from './Login/Login.js';\nimport SignUp from './SignUp/SignUp.js';\nimport TipInfo from './TipInfo/TipInfo';\n// react-bootstrap\nimport Navbar from 'react-bootstrap/Navbar'\nimport Form from 'react-bootstrap/Form'\nimport FormControl from 'react-bootstrap/FormControl'\nimport Button from 'react-bootstrap/Button'\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar'\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup'\nimport ToggleButton from 'react-bootstrap/ToggleButton'\nimport Container from 'react-bootstrap/Container'\n\n//amplify imports\nimport Amplify from 'aws-amplify';\nimport awsmobile from './aws-exports';\nimport { withAuthenticator } from 'aws-amplify-react';\n\nAmplify.configure(awsmobile);\n\n// component to get data from user / guest\n\nclass App extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      showHome: true,\n      showSignUp: false,\n      showTipUpdate: false,\n    }\n\n    this.handleSignUp = this.handleSignUp.bind(this);\n    this.handleTipUpdate = this.handleTipUpdate.bind(this);\n  }\n\n  handleSignUp = () => {\n    this.setState({\n      showHome: !this.state.showHome,\n      showSignUp: !this.state.showSignUp\n    });\n  }\n\n  handleTipUpdate = () => {\n    this.setState({\n      showHome: !this.state.showHome,\n      showTipUpdate: !this.state.showTipUpdate\n    })\n  }\n\n  render() {\n\n    const home = (\n      <Navbar className=\"bg-olive justify-content-between\">\n\n        {/* TODO: update the logo with Navbar.Brand */}\n        <h3 className=\"text-color-white\">Pooled House</h3>\n\n        <Form inline>\n          <FormControl type=\"text\" placeholder=\"ex: upper manhattan\" className=\"mr-sm\" />\n          <Button type=\"submit\" variant=\"outline-light\"><span>{\"\\uD83D\\uDD0D\"}</span></Button>\n        </Form>\n\n        <ButtonToolbar>\n          <ToggleButtonGroup type=\"radio\" name=\"options\" defaultValue={1}>\n            <ToggleButton value={1} variant=\"warning\">Map View</ToggleButton>\n            <ToggleButton value={2} variant=\"warning\">List View</ToggleButton>\n          </ToggleButtonGroup>\n        </ButtonToolbar>\n        \n        <ButtonToolbar>\n          <Button \n            href=\"#\" variant=\"link\" className=\"text-color-white\" \n            onClick={this.handleTipUpdate}>Tip Update\n          </Button>\n          {/*<Button \n            href=\"#\" variant=\"link\" className=\"text-color-white\" \n            onClick={this.handleSignUp}>Sign Up\n          </Button>\n          <Button \n            href=\"#\" variant=\"link\" className=\"text-color-white\">Log In\n          </Button>*/}\n        </ButtonToolbar>\n      </Navbar>\n      );\n/*\n\nattempt to streamline multiple conditional views...unsuccessful.\n\n    function whichView(tu_h, su_h, TU, SU) {\n      if (TU === true) {\n        return <TipInfo handler={tu_h}/>;\n      } else if (SU === true) {\n        return <SignUp handler={su_h}/>;\n      } else {\n        return home;\n      }\n    }\n*/ \n    return (\n      <div className=\"App\">\n        {this.state.showSignUp ? <SignUp handler={this.handleSignUp} /> : <div id=\"home\">{home}</div>}\n        {this.state.showTipUpdate ? <TipInfo handler={this.handleTipUpdate}/> : null }\n      </div>\n    );\n  }\n}\n\nexport default withAuthenticator(App, true);\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}